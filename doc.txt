Por donde partir? Por el principio.

Queremos construir una aplicación web y móvil y las opciones de desarrollo
mas comentadas hoy en dia son  python/ruby para web y iOS para móvil.

No me detendré ahora el por qué de elegir esas tecnologías, iré disectando 
los beneficios a medida que documente cada pieza fundamental.

Al grano. Para web en python django es muy popular, pero nos inclinamos por
flask por su simpleza y la idea de ir construyendo modulo por módulo a medida que lo necesitemos.

- cree una carpeta llamada simple (que refleja el espiritu de la app)

Hoy en dia existen aplicaciones y repositorios que permiten instalar y manejar las dependencias que estas aplicaciones tienen. En linux ubuntu/debian apt-get es un comando que permite descargar e instalar aplicaciones fácilmente (una vez que ya existe cierta comodidad con la linea de comandos). Para el caso de python, la herramienta pip permite instalar librerias y dependencias propias de python (A su vez ruby utiliza gem, por ejemplo)

Para obtener flask es necesario usar pip. Flask a su vez depende de otros paquetes como Werkzeug (servidor) para funcionar, y pip se encarga de instalar estas dependencias de manera automática.

Pero, que hay cuando hay muchas aplicaciones que manejan distintas versiones de dependencias, no hay conflictos. Los hay. Para ello existen los entornor virtuales, o ambientes, sandbox, en donde uno instala algo sólo para ser ejecutado por esa carpeta donde reside la aplicación.

- instalar virtualenv y crear uno nuevo : ‘simple-venv’

$ sudo easy_install virtualenv

$ virtualenv simple-venv

. simple-venv/bin/activate

Virtualenv es una de ellas. Permite a su vez en el servidor real de produccion reducir riesgos de desastres causados por desarrolladores sin experiencia.

El propmt cambia cuando estamos en un entorno virtual. Luego podemos instalar Flask.

Creamos un archivo .py con lo minimo para correr flask. 

luego al arrancar con python, se arranca un servidor en localhost, puerto 5000 con nuestra micro app.

Cada proyecto debe poder interactuar con archivos html. Para eso existen las plantillas y el modulo Jinja. 

Tambien a su vez, Estructurar flask en diferentes archivos a la larga es conveniente ya que nos permite usar el patron MVC.

Que es MVC, es una técnica de organización y programación que permite separar responsabilidades, en donde la M se encarga de los datos, la V se encarga de solo mostrar, y C controller de cordinar todo. Muy usada por defecto en aplicaciones iOS y en la programación en general por estos dias.

Lo importante de todo esto es no olvidar que mas alla de la herramienta, o el ecosistema de herramientas, hay que tener claro qué queremos hacer y que imprima una esencia personal desde cero y desde el principio.


Lo primero que deseo cambiar, es la fuente. Para ello necesito interactuar con HTML  y CSS
y agregar un logo. Estos son contenidos estaticos de todos modos. Pero será nuestro sello.











